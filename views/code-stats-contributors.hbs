{{!< layout}}

<div id="code-stats-contributors">
    <header class="aui-page-header">
        <div class="aui-page-header-inner">
            <div class="aui-page-header-main">
                <ol class="aui-nav aui-nav-breadcrumbs">
                    <li><a href="https://bitbucket.org/{{repo.owner.username}}" target="_top">{{repo.owner.name}}</a></li>
                    {{#if repo.project.key}}
                        <li><a href="https://bitbucket.org/account/user/{{repo.owner.username}}/projects/{{repo.project.key}}" target="_top">{{repo.project.name}}</a></li>
                    {{/if}}
                    <li><a href="https://bitbucket.org/{{repo.path}}" target="_top">{{repo.name}}</a></li>
                </ol>
                <h1>Contributors</h1>
            </div>
        </div>
    </header>
    <ol id="contributors-cards">
    </ol>
</div>

<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<script src="{{furl '/js/md5.min.js'}}"></script>

<script>
    var i = 1;
    var data = {{{data}}};
    var minDate = new Date(data.min_date);
    var maxDate = new Date(data.max_date);

    var $contributorsCards = $('#contributors-cards');

    for (var authorKey in data.authors) {
        // generate data
        var dates = [];
        var values = [];

        for (var day = new Date(minDate.getTime()); day <= maxDate; day.setDate(day.getDate() + 1)) {
            var dayISOString = day.toISOString().substr(0, 10);
            dates.push(dayISOString);
            values.push(data.authors[authorKey].commits[dayISOString] || 0);
        }
        
        // create dom objects
        var contributorId = 'contributor-graph-' + md5(authorKey);
        var contributorAvatar = 'https://d301sr5gafysq2.cloudfront.net/8d5f806505b4/img/default_avatar/user_blue.svg';

        var $contributorCard = $('                                                                          \
            <li class="contributor-card">                                                                   \
                <div class="wrapper">                                                                       \
                    <section class="title">                                                                 \
                        <span class="avatar aui-avatar aui-avatar-medium">                                  \
                            <span class="aui-avatar-inner">                                                 \
                                <img src="' + contributorAvatar + '">                                       \
                            </span>                                                                         \
                        </span>                                                                             \
                        <h3>' + authorKey + '                                                               \
                            <span class="meta">' + data.authors[authorKey].commitsCount + ' commits</span>  \
                        </h3>                                                                               \
                        <span class="rank">#' + i + '</span>                                                \
                    </section>                                                                              \
                    <section class="graph"></section>                                                       \
                </div>                                                                                      \
            </li>'
        );

        var $contributorGraph = $('<g id="' + contributorId + '"></g>');
        
        $contributorCard.find('.graph').append($contributorGraph);
        $contributorCard.appendTo($contributorsCards);

        // plot chart
        Plotly.newPlot(
            contributorId, 
            [
                {
                    x: dates,
                    y: values,
                    type: 'scatter',
                    mode: 'lines',
                    line: {
                        shape: 'spline',
                        width: 0
                    },
                    fill: 'tozeroy',
                    fillcolor: '#42526E',
                    connectgaps: false
                }
            ],
            // layout
            {
                autosize: true,
                margin: {
                    l: 10, b: 24, r: 0, t: 0
                },
                paper_bgcolor: 'rgba(0,0,0,0)',
                plot_bgcolor: 'rgba(0,0,0,0)',
                xaxis: {
                    showgrid: false,
                    showline: false,
                    tickcolor: '#e6e6e6',
                    tickfont: {
                        color: '#6a737d',
                        size: 10,
                    },
                    ticklen: 4,
                    ticks: 'outside',
                    zerolinewidth: 1
                },
                yaxis: {
                    gridcolor: '#e6e6e6',
                    tickfont: {
                        color: '#6a737d',
                        size: 10,
                    },
                    ticks: 'hidden'
                }
            },
            // options
            {
                staticPlot: true,
            }
        );

        $('#' + contributorId + ' .main-svg .cartesianlayer .yaxislayer-above').attr('transform', 'translate(' + ($contributorGraph.outerWidth() / 2 + 6.5) + ',0)');

        // next contributor...
        i++;
    }
</script>